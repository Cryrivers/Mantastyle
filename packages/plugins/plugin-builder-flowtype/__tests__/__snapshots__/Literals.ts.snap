// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Literals Array of literals 1`] = `
"\\"use strict\\";

var _runtime = _interopRequireDefault(require(\\"@manta-style/runtime\\"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Test = _runtime.default.TypeAliasDeclaration(\\"Test\\", function (typeFactory) {
  var type = _runtime.default.TupleType([_runtime.default.Literal(1), _runtime.default.Literal(2), _runtime.default.Literal(3), _runtime.default.Literal(\\"hello\\"), _runtime.default.Literal(\\"world\\")]);

  return type;
}, []);"
`;

exports[`Literals Booleans 1`] = `
"\\"use strict\\";

var _runtime = _interopRequireDefault(require(\\"@manta-style/runtime\\"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Test = _runtime.default.TypeAliasDeclaration(\\"Test\\", function (typeFactory) {
  var type = _runtime.default.Literal(true);

  return type;
}, []);"
`;

exports[`Literals Booleans 2`] = `
"\\"use strict\\";

var _runtime = _interopRequireDefault(require(\\"@manta-style/runtime\\"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Test = _runtime.default.TypeAliasDeclaration(\\"Test\\", function (typeFactory) {
  var type = _runtime.default.Literal(false);

  return type;
}, []);"
`;

exports[`Literals Numbers 1`] = `
"\\"use strict\\";

var _runtime = _interopRequireDefault(require(\\"@manta-style/runtime\\"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Test = _runtime.default.TypeAliasDeclaration(\\"Test\\", function (typeFactory) {
  var type = _runtime.default.Literal(1);

  return type;
}, []);"
`;

exports[`Literals Strings 1`] = `
"\\"use strict\\";

var _runtime = _interopRequireDefault(require(\\"@manta-style/runtime\\"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Test = _runtime.default.TypeAliasDeclaration(\\"Test\\", function (typeFactory) {
  var type = _runtime.default.Literal(\\"test\\");

  return type;
}, []);"
`;
